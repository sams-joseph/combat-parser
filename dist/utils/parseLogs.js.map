{"version":3,"sources":["../../server/utils/parseLogs.js"],"names":["formatSpellName","getTarget","getAllCasters","filterBySpell","filterByCaster","filterByTarget","calculateCrit","calculateOverhealing","parseAll","parseHealing","parseDamage","getPlayerName","parseDeaths","getCareer","player","getTimestamp","line","parts","slice","replace","split","times","dateString","Date","timestamp","dateTime","dateTimeParsed","toString","time","getCaster","playerName","caster","indexOf","name","string","stringRemoveSpecials","stringToUnderscore","toLowerCase","getSpell","index","event","data","critical","includes","spellName","amount","Number","arr","match","extra","label","meta","length","object","casters","forEach","obj","push","filter","result","spell","target","castersActions","crits","critPercentage","totalOverhealed","overhealing","overheal","fileName","fileNameParts","playerActions","career"],"mappings":"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","file":"parseLogs.js","sourcesContent":["import abilities from \"../json/abilities.json\";\n\nconst player = \"Player\";\n\nfunction getTimestamp(line) {\n  const parts = line\n    .slice(0, 10)\n    .replace(/[\\[\\]']+/g, \"\")\n    .split(\"/\");\n  const times = line\n    .slice(10, 20)\n    .replace(/[\\[\\]']+/g, \"\")\n    .split(\":\");\n  const dateString = new Date(\n    `20${parts[0]}`,\n    `${parts[1] - 1}`,\n    `${parts[2]}`,\n    `${times[0]}`,\n    `${times[1]}`,\n    `${times[2]}`,\n    0\n  );\n\n  const timestamp = {};\n  timestamp.dateTime = dateString;\n  timestamp.dateTimeParsed = dateString.toString();\n  timestamp.time = line.slice(10, 20).replace(/[\\[\\]']+/g, \"\");\n\n  return timestamp;\n}\n\nfunction getCaster(line, playerName) {\n  const caster = {};\n  if (line.indexOf(\"Your\") < 0 || line.indexOf(\"You\") < 0) {\n    caster.name = line.slice(21, line.indexOf(\"'s\"));\n  } else caster.name = playerName;\n\n  return caster;\n}\n\nexport function formatSpellName(string) {\n  const stringRemoveSpecials = string.replace(/[^a-zA-Z ]/g, \"\");\n  const stringToUnderscore = stringRemoveSpecials.replace(/ /g, \"_\");\n  return stringToUnderscore.toLowerCase();\n}\n\nfunction getSpell(index, event, line) {\n  const data = {};\n  data.critical = line.includes(\"critically\");\n  if (line.indexOf(\"Your\") < 0 || line.indexOf(\"You\") < 0) {\n    if (data.critical)\n      data.spellName = line.slice(index, line.indexOf(\"critically\") - 1);\n    else data.spellName = line.slice(index, line.indexOf(event) - 1);\n  } else {\n    if (data.critical)\n      data.spellName = line.slice(\n        line.indexOf(\"Your\") + 5,\n        line.indexOf(\"critically\") - 1\n      );\n    else\n      data.spellName = line.slice(\n        line.indexOf(\"Your\") + 5,\n        line.indexOf(event) - 1\n      );\n  }\n\n  if (event === \"heals\")\n    data.amount = Number(\n      line.slice(line.indexOf(\"for\") + 4, line.indexOf(\"points\") - 1)\n    );\n  else if (event === \"hits\")\n    data.amount = Number(\n      line.slice(line.indexOf(\"for\") + 4, line.indexOf(\"damage\") - 1)\n    );\n\n  if (\n    line.includes(\"overhealed\") ||\n    line.includes(\"mitigated\") ||\n    line.includes(\"overkill\")\n  ) {\n    const arr = line.match(/\\(([^)]+)\\)/)[1].split(\" \");\n    data.extra = { amount: Number(arr[0]), label: arr[1] };\n  }\n\n  if (abilities[formatSpellName(data.spellName)]) {\n    data.meta = abilities[formatSpellName(data.spellName)];\n  }\n\n  return data;\n}\n\nexport function getTarget(event, line, playerName) {\n  const data = {};\n  data.name = line.slice(\n    line.indexOf(event) + event.length + 1,\n    line.indexOf(\"for\") - 1\n  );\n\n  if (data.name === \"you\") data.name = playerName;\n\n  return data;\n}\n\nexport function getAllCasters(object) {\n  const casters = [];\n  object.forEach(obj => {\n    if (casters.indexOf(obj.caster.name) < 0) {\n      casters.push(obj.caster.name);\n    }\n  });\n\n  return casters;\n}\n\nexport function filterBySpell(object, filter) {\n  const result = object.filter(obj => obj.spell.spellName == filter);\n\n  return result;\n}\n\nexport function filterByCaster(object, filter) {\n  const result = object.filter(obj => obj.caster.name === filter);\n\n  return result;\n}\n\nexport function filterByTarget(object, filter) {\n  const result = object.filter(obj => obj.target.name === filter);\n\n  return result;\n}\n\nexport function calculateCrit(caster, object) {\n  const castersActions = filterByCaster(object, caster);\n  const crits = castersActions.filter(obj => obj.spell.critical);\n  const critPercentage = crits.length / castersActions.length;\n\n  return critPercentage;\n}\n\nexport function calculateOverhealing(caster, object) {\n  let totalOverhealed = 0;\n  const castersActions = filterByCaster(object, caster);\n  const overhealing = castersActions.filter(obj => obj.spell.extra);\n  overhealing.forEach(overheal => {\n    totalOverhealed += Number(overheal.spell.extra.amount);\n  });\n\n  return totalOverhealed;\n}\n\nexport function parseAll(line, playerName) {\n  const data = {};\n  data.timestamp = getTimestamp(line);\n  data.caster = getCaster(line, playerName);\n  if (line.includes(\"heals\"))\n    data.spell = getSpell(line.indexOf(\"'s\") + 3, \"heals\", line);\n  else if (line.includes(\"hits\"))\n    data.spell = getSpell(line.indexOf(\"'s\") + 3, \"hits\", line);\n  data.target = getTarget(\"heals\", line, playerName);\n  return data;\n}\n\nexport function parseHealing(line, playerName) {\n  const data = {};\n  data.timestamp = getTimestamp(line);\n  data.caster = getCaster(line, playerName);\n  data.spell = getSpell(line.indexOf(\"'s\") + 3, \"heals\", line);\n  data.target = getTarget(\"heals\", line, playerName);\n  return data;\n}\n\nexport function parseDamage(line, playerName) {\n  const data = {};\n  data.timestamp = getTimestamp(line);\n  data.caster = getCaster(line, playerName);\n  data.spell = getSpell(line.indexOf(\"'s\") + 3, \"hits\", line);\n  data.target = getTarget(\"hits\", line, playerName);\n  return data;\n}\n\nexport function getPlayerName(fileName) {\n  const fileNameParts = fileName.split(\"-\");\n  const playerName = fileNameParts[fileNameParts.length - 1];\n  return playerName;\n}\n\nexport function parseDeaths(line, playerName) {\n  const data = {};\n  data.timestamp = getTimestamp(line);\n  data.player = playerName;\n\n  return data;\n}\n\nexport function getCareer(object, playerName) {\n  const playerActions = filterByCaster(object, playerName);\n  let career = \"No career found\";\n  playerActions.forEach(obj => {\n    if (obj.spell.meta) {\n      career = obj.spell.meta.career;\n    }\n  });\n\n  return career;\n}\n"]}