{"version":3,"sources":["../server/index.js"],"names":["listener","listen","process","env","PORT","console","log","address","port","gracefulShutdown","server","close","exit","setTimeout","error","once"],"mappings":";;AAAA;;;;;;AAEA,IAAMA,WAAW,cAAIC,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B,EAAqC,YAAM;AAC1DC,UAAQC,GAAR,sBAA+BN,SAASO,OAAT,GAAmBC,IAAlD;AACD,CAFgB,CAAjB;;AAIA;;;AAGA,SAASC,gBAAT,GAA4B;AAC1BJ,UAAQC,GAAR,CAAY,iDAAZ;AACAI,SAAOC,KAAP,CAAa,YAAM;AACjBN,YAAQC,GAAR,CAAY,mCAAZ;AACAJ,YAAQU,IAAR;AACD,GAHD;AAIA;AACAC,aAAW,YAAM;AACfR,YAAQS,KAAR,CACE,+DADF;AAGAZ,YAAQU,IAAR;AACD,GALD,EAKG,KAAK,IALR;AAMD;AACD;AACAV,QAAQa,IAAR,CAAa,SAAb,EAAwBN,gBAAxB;AACA;AACAP,QAAQa,IAAR,CAAa,QAAb,EAAuBN,gBAAvB","file":"index.js","sourcesContent":["import app from \"./app\";\n\nconst listener = app.listen(process.env.PORT || 5000, () => {\n  console.log(`Running on port ${listener.address().port}...`);\n});\n\n/**\n * Wait for connections to end, then shut down\n * */\nfunction gracefulShutdown() {\n  console.log(\"Received kill signal, shutting down gracefully.\");\n  server.close(() => {\n    console.log(\"Closed out remaining connections.\");\n    process.exit();\n  });\n  // if after\n  setTimeout(() => {\n    console.error(\n      \"Could not close connections in time, forcefully shutting down\"\n    );\n    process.exit();\n  }, 10 * 1000);\n}\n// listen for TERM signal .e.g. kill\nprocess.once(\"SIGTERM\", gracefulShutdown);\n// listen for INT signal e.g. Ctrl-C\nprocess.once(\"SIGINT\", gracefulShutdown);\n"]}